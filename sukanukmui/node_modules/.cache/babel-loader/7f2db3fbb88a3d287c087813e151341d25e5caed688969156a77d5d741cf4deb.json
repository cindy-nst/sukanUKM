{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\is207\\\\Desktop\\\\sukanUKM\\\\sukanUKM\\\\sukanukmui\\\\src\\\\components\\\\HeroStudent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from './UserContext'; // Adjust the path based on your project structure\nimport './HeroStudent.css'; // CSS file for styling the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroStudent = () => {\n  _s();\n  const {\n    user\n  } = useContext(UserContext); // Access the user object from context\n  const [userName, setUserName] = useState(''); // State to store the fetched name\n\n  useEffect(() => {\n    if (user && user.UserID && user.Role) {\n      // Fetch the name dynamically based on role and UserID\n      fetch(`http://localhost:5000/getName/${user.Role}/${user.UserID}`).then(response => response.json()).then(data => {\n        if (data.name) {\n          setUserName(data.name); // Update state with the fetched name\n        } else {\n          setUserName('Unknown'); // Fallback if no name is found\n        }\n      }).catch(error => {\n        console.error('Error fetching user name:', error);\n        setUserName('Error'); // Display error if the API call fails\n      });\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-student\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WELCOME TO SUKAN UKM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: userName || 'Loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(HeroStudent, \"8jpxWZ0/8Igzk2M5uZ4ZbEoJXVw=\");\n_c = HeroStudent;\nexport default HeroStudent;\nvar _c;\n$RefreshReg$(_c, \"HeroStudent\");","map":{"version":3,"names":["React","useEffect","useState","useContext","UserContext","jsxDEV","_jsxDEV","HeroStudent","_s","user","userName","setUserName","UserID","Role","fetch","then","response","json","data","name","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/is207/Desktop/sukanUKM/sukanUKM/sukanukmui/src/components/HeroStudent.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { UserContext } from './UserContext'; // Adjust the path based on your project structure\r\nimport './HeroStudent.css'; // CSS file for styling the component\r\n\r\nconst HeroStudent = () => {\r\n  const { user } = useContext(UserContext); // Access the user object from context\r\n  const [userName, setUserName] = useState(''); // State to store the fetched name\r\n\r\n  useEffect(() => {\r\n    if (user && user.UserID && user.Role) {\r\n      // Fetch the name dynamically based on role and UserID\r\n      fetch(`http://localhost:5000/getName/${user.Role}/${user.UserID}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.name) {\r\n            setUserName(data.name); // Update state with the fetched name\r\n          } else {\r\n            setUserName('Unknown'); // Fallback if no name is found\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching user name:', error);\r\n          setUserName('Error'); // Display error if the API call fails\r\n        });\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"hero-student\">\r\n      <h1>WELCOME TO SUKAN UKM</h1>\r\n      <h2>{userName || 'Loading...'}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroStudent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,eAAe,CAAC,CAAC;AAC7C,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAK,CAAC,GAAGN,UAAU,CAACC,WAAW,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,IAAIA,IAAI,CAACG,MAAM,IAAIH,IAAI,CAACI,IAAI,EAAE;MACpC;MACAC,KAAK,CAAC,iCAAiCL,IAAI,CAACI,IAAI,IAAIJ,IAAI,CAACG,MAAM,EAAE,CAAC,CAC/DG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACd,IAAIA,IAAI,CAACC,IAAI,EAAE;UACbR,WAAW,CAACO,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;QAC1B,CAAC,MAAM;UACLR,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;QAC1B;MACF,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDV,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;EAEV,oBACEH,OAAA;IAAKiB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BlB,OAAA;MAAAkB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BtB,OAAA;MAAAkB,QAAA,EAAKd,QAAQ,IAAI;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA7BID,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA+BjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}