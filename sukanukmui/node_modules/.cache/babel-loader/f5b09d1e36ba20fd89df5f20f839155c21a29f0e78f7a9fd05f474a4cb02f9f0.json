{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\is207\\\\Desktop\\\\sukanUKM\\\\sukanUKM\\\\sukanukmui\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  userID,\n  role\n}) => {\n  _s();\n  const [profile, setProfile] = useState(null);\n  const [basicName, setBasicName] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log(\"Role: \", role);\n    console.log(\"UserID: \", userID);\n\n    // Check if both role and userID are defined\n    if (!role || !userID) {\n      setError('Role or UserID is missing.');\n      setLoading(false);\n      return; // Prevent further execution if role or userID is missing\n    }\n\n    // Fetch the basic name (StudentName or StaffName based on role)\n    const fetchBasicName = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/getName/${role}/${userID}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch name');\n        }\n        const data = await response.json();\n\n        // Set name based on role\n        if (role === 'Student') {\n          setBasicName(data.name); // Use name directly from response\n        } else if (role === 'Staff') {\n          setBasicName(data.name); // Use name directly from response\n        } else {\n          throw new Error('Invalid role');\n        }\n      } catch (error) {\n        setError(error.message); // Set error state for display\n        console.error('Error fetching name:', error);\n      }\n    };\n\n    // Fetch full profile data (from /getProfile route)\n    const fetchProfile = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/getProfile/${role}/${userID}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch profile');\n        }\n        const data = await response.json();\n        setProfile(data); // Store full profile data\n      } catch (error) {\n        setError(error.message); // Set error state for display\n        console.error('Error fetching profile:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBasicName();\n    fetchProfile();\n  }, [userID, role]);\n\n  // Show loading message while data is being fetched\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Show error message if an error occurs\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Show error if profile is not found\n  if (!profile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Profile not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-image\",\n            style: {\n              backgroundImage: `url(/images/${profile.StudentPicture || profile.StaffPicture || 'default.png'})` // Use default image if no picture\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-id\",\n              children: profile.StudentID || profile.StaffID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-name\",\n              children: basicName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"contact-label\",\n                  children: \"Phone No.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"contact-value\",\n                  children: profile.StudentPhoneNumber || profile.StaffPhoneNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"contact-label\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"contact-value\",\n                  children: profile.StudentEmail || profile.StaffEmail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"nJgiLfGMwB5QYIqunbQhT7xoCb4=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Profile","userID","role","_s","profile","setProfile","basicName","setBasicName","loading","setLoading","error","setError","console","log","fetchBasicName","response","fetch","ok","Error","data","json","name","message","fetchProfile","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","backgroundImage","StudentPicture","StaffPicture","StudentID","StaffID","StudentPhoneNumber","StaffPhoneNumber","StudentEmail","StaffEmail","_c","$RefreshReg$"],"sources":["C:/Users/is207/Desktop/sukanUKM/sukanUKM/sukanukmui/src/components/Profile/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles.css'; // Import the CSS file\r\n\r\nconst Profile = ({ userID, role }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [basicName, setBasicName] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Role: \", role);\r\n    console.log(\"UserID: \", userID);\r\n\r\n    // Check if both role and userID are defined\r\n    if (!role || !userID) {\r\n      setError('Role or UserID is missing.');\r\n      setLoading(false);\r\n      return; // Prevent further execution if role or userID is missing\r\n    }\r\n\r\n    // Fetch the basic name (StudentName or StaffName based on role)\r\n    const fetchBasicName = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/getName/${role}/${userID}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch name');\r\n        }\r\n        const data = await response.json();\r\n\r\n        // Set name based on role\r\n        if (role === 'Student') {\r\n          setBasicName(data.name); // Use name directly from response\r\n        } else if (role === 'Staff') {\r\n          setBasicName(data.name); // Use name directly from response\r\n        } else {\r\n          throw new Error('Invalid role');\r\n        }\r\n      } catch (error) {\r\n        setError(error.message); // Set error state for display\r\n        console.error('Error fetching name:', error);\r\n      }\r\n    };\r\n\r\n    // Fetch full profile data (from /getProfile route)\r\n    const fetchProfile = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/getProfile/${role}/${userID}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch profile');\r\n        }\r\n        const data = await response.json();\r\n        setProfile(data); // Store full profile data\r\n      } catch (error) {\r\n        setError(error.message); // Set error state for display\r\n        console.error('Error fetching profile:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBasicName();\r\n    fetchProfile();\r\n  }, [userID, role]);\r\n\r\n  // Show loading message while data is being fetched\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Show error message if an error occurs\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  // Show error if profile is not found\r\n  if (!profile) {\r\n    return <div>Profile not found.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <div className=\"main-content\">\r\n        <div className=\"profile-card\">\r\n          <div className=\"profile-info\">\r\n            <div\r\n              className=\"profile-image\"\r\n              style={{\r\n                backgroundImage: `url(/images/${profile.StudentPicture || profile.StaffPicture || 'default.png'})`, // Use default image if no picture\r\n              }}\r\n            ></div>\r\n            <div className=\"profile-details\">\r\n              <div className=\"profile-id\">{profile.StudentID || profile.StaffID}</div>\r\n              <div className=\"profile-name\">{basicName}</div> {/* Use the name based on role */}\r\n              <div className=\"contact-info\">\r\n                <div className=\"contact-item\">\r\n                  <span className=\"contact-label\">Phone No.</span>\r\n                  <span className=\"contact-value\">{profile.StudentPhoneNumber || profile.StaffPhoneNumber}</span>\r\n                </div>\r\n                <div className=\"contact-item\">\r\n                  <span className=\"contact-label\">Email</span>\r\n                  <span className=\"contact-value\">{profile.StudentEmail || profile.StaffEmail}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}