{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Il Azim\\\\Desktop\\\\sukanUKM\\\\sukanUKM\\\\sukanukmui\\\\src\\\\components\\\\Hero.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from './UserContext'; // Adjust the path if necessary\nimport './Hero.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hero = () => {\n  _s();\n  const {\n    user\n  } = useContext(UserContext); // Access user from context\n  const [name, setName] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (user && user.UserID) {\n      setLoading(true); // Start loading\n\n      // Make API call to fetch name based on user role (Staff or Student)\n      fetch('http://localhost:5000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: user.UserID,\n          password: user.Password // Assuming user.Password is available from context\n        })\n      }).then(response => response.json()).then(data => {\n        if (data.staffName) {\n          setName(data.staffName); // Set staff name if user is staff\n        } else if (data.studentName) {\n          setName(data.studentName); // Set student name if user is student\n        }\n        setLoading(false); // Done loading\n      }).catch(error => {\n        console.error('Error fetching name:', error);\n        setLoading(false); // Done loading even if there is an error\n      });\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WELCOME TO SUKAN UKM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: loading ? 'Loading...' : name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Hero, \"GywyW68UqGmTeHwnmWEUZlFaaGk=\");\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useState","useEffect","useContext","UserContext","jsxDEV","_jsxDEV","Hero","_s","user","name","setName","loading","setLoading","UserID","fetch","method","headers","body","JSON","stringify","username","password","Password","then","response","json","data","staffName","studentName","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Il Azim/Desktop/sukanUKM/sukanUKM/sukanukmui/src/components/Hero.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from './UserContext';  // Adjust the path if necessary\r\nimport './Hero.css';\r\n\r\nconst Hero = () => {\r\n  const { user } = useContext(UserContext); // Access user from context\r\n  const [name, setName] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (user && user.UserID) {\r\n      setLoading(true); // Start loading\r\n\r\n      // Make API call to fetch name based on user role (Staff or Student)\r\n      fetch('http://localhost:5000/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: user.UserID,\r\n          password: user.Password, // Assuming user.Password is available from context\r\n        }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data.staffName) {\r\n            setName(data.staffName); // Set staff name if user is staff\r\n          } else if (data.studentName) {\r\n            setName(data.studentName); // Set student name if user is student\r\n          }\r\n          setLoading(false); // Done loading\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching name:', error);\r\n          setLoading(false); // Done loading even if there is an error\r\n        });\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"hero\">\r\n      <h1>WELCOME TO SUKAN UKM</h1>\r\n      {/* Show loading state or the dynamic name */}\r\n      <h2>{loading ? 'Loading...' : name}</h2> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,eAAe,CAAC,CAAE;AAC9C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAK,CAAC,GAAGN,UAAU,CAACC,WAAW,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAIO,IAAI,IAAIA,IAAI,CAACK,MAAM,EAAE;MACvBD,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;;MAElB;MACAE,KAAK,CAAC,6BAA6B,EAAE;QACnCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAEZ,IAAI,CAACK,MAAM;UACrBQ,QAAQ,EAAEb,IAAI,CAACc,QAAQ,CAAE;QAC3B,CAAC;MACH,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACd,IAAIA,IAAI,CAACC,SAAS,EAAE;UAClBjB,OAAO,CAACgB,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;QAC3B,CAAC,MAAM,IAAID,IAAI,CAACE,WAAW,EAAE;UAC3BlB,OAAO,CAACgB,IAAI,CAACE,WAAW,CAAC,CAAC,CAAC;QAC7B;QACAhB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5ClB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,oBACEH,OAAA;IAAK2B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB5B,OAAA;MAAA4B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7BhC,OAAA;MAAA4B,QAAA,EAAKtB,OAAO,GAAG,YAAY,GAAGF;IAAI;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA3CID,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}