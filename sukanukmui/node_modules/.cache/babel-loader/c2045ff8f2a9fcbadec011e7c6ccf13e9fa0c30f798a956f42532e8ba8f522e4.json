{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Il Azim\\\\Desktop\\\\sukanUKM\\\\sukanUKM\\\\sukanukmui\\\\src\\\\components\\\\HeroStudent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './HeroStudent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroStudent = () => {\n  _s();\n  const [userId, setUserId] = useState(null); // Store fetched UserID\n  const [studentName, setStudentName] = useState(''); // Store student's name\n  const [loading, setLoading] = useState(true); // Show loading state\n\n  useEffect(() => {\n    // Step 1: Fetch UserID from the backend\n    const fetchUserId = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/getUserId'); // Replace with the actual endpoint\n        if (response.ok) {\n          const data = await response.json();\n          setUserId(data.userId); // Set the fetched UserID\n        } else {\n          console.error('Failed to fetch UserID');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchUserId();\n  }, []);\n  useEffect(() => {\n    // Step 2: Fetch student's name once the UserID is available\n    const fetchStudentName = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/student/${userId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setStudentName(data.name); // Set the name from the response\n        } else {\n          console.error('Failed to fetch student name');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      } finally {\n        setLoading(false); // Stop loading\n      }\n    };\n    if (userId) {\n      fetchStudentName();\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero-student\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WELCOME TO SUKAN UKM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: studentName || 'Student not found'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(HeroStudent, \"Kv5gd+SnXTN+32r4igqTAy+FERA=\");\n_c = HeroStudent;\nexport default HeroStudent;\nvar _c;\n$RefreshReg$(_c, \"HeroStudent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","HeroStudent","_s","userId","setUserId","studentName","setStudentName","loading","setLoading","fetchUserId","response","fetch","ok","data","json","console","error","fetchStudentName","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Il Azim/Desktop/sukanUKM/sukanUKM/sukanukmui/src/components/HeroStudent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './HeroStudent.css';\r\n\r\nconst HeroStudent = () => {\r\n  const [userId, setUserId] = useState(null); // Store fetched UserID\r\n  const [studentName, setStudentName] = useState(''); // Store student's name\r\n  const [loading, setLoading] = useState(true); // Show loading state\r\n\r\n  useEffect(() => {\r\n    // Step 1: Fetch UserID from the backend\r\n    const fetchUserId = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/getUserId'); // Replace with the actual endpoint\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setUserId(data.userId); // Set the fetched UserID\r\n        } else {\r\n          console.error('Failed to fetch UserID');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserId();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Step 2: Fetch student's name once the UserID is available\r\n    const fetchStudentName = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/student/${userId}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setStudentName(data.name); // Set the name from the response\r\n        } else {\r\n          console.error('Failed to fetch student name');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      } finally {\r\n        setLoading(false); // Stop loading\r\n      }\r\n    };\r\n\r\n    if (userId) {\r\n      fetchStudentName();\r\n    }\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div className=\"hero-student\">\r\n      <h1>WELCOME TO SUKAN UKM</h1>\r\n      {loading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <h2>{studentName || 'Student not found'}</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroStudent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;QACjE,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCV,SAAS,CAACS,IAAI,CAACV,MAAM,CAAC,CAAC,CAAC;QAC1B,CAAC,MAAM;UACLY,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;QACzC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IAEDP,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd;IACA,MAAMoB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiCR,MAAM,EAAE,CAAC;QACvE,IAAIO,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCR,cAAc,CAACO,IAAI,CAACK,IAAI,CAAC,CAAC,CAAC;QAC7B,CAAC,MAAM;UACLH,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;QAC/C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAED,IAAIL,MAAM,EAAE;MACVc,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACd,MAAM,CAAC,CAAC;EAEZ,oBACEH,OAAA;IAAKmB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BpB,OAAA;MAAAoB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BjB,OAAO,gBACNP,OAAA;MAAAoB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEnBxB,OAAA;MAAAoB,QAAA,EAAKf,WAAW,IAAI;IAAmB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAC7C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAzDID,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA2DjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}